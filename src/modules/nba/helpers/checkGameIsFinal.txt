import { APIEmbedField, EmbedBuilder } from "discord.js";
import { getLiveBoxScores } from "../data/BDL/endpoints/boxscores/liveBoxScores";
import IGame from "../interfaces/IGame";
import IResult from "../interfaces/IResult";
import { extractTimeIfUtc } from "../utils/extractTimeIfUtc";
import { extractBoxScoreData } from "./extractBoxScoreData";
import { IBoxScorePlayer, IBoxScoreStats } from "../interfaces/IBoxScore";
import { findTopPerformers } from "./Impactfulness";
import { formatPlayerStats } from "./formatBoxScores";
import { getGameStats } from "../utils/getGameStats";
import redisClient from "../../../config/redisClient";
import { getTeamEmote } from "../utils/redisUtils/teamEmotes";
import { buildGameEventEmbed } from "../utils/formatGameEmbed";

export async function checkGameIsFinal(game: IGame): Promise<IResult> {
  console.log("Checking for if the game has finalized...");

  //   console.log(`Game Status in checkGameIsFinal: ${game.status}`);

  // Check if the game is already finalized and missed due to null game.time
  if (game.status === "Final") {
    const eventDescription = `\n**Final Score:** ${game.home_team_score} - ${game.visitor_team_score}\n\n`;
    const eventId = "Game Has Ended";

    // console.log(
    //   `EventDescription set: ${eventDescription} || eventId set: ${eventId}`
    // );

    // Fetch live box scores
    const liveBoxScores = await getLiveBoxScores();

    if (!liveBoxScores) {
      console.error("No live box scores found");
      return { occurred: false };
    }

    const boxScores = await extractBoxScoreData(liveBoxScores, game);

    if (eventDescription && eventDescription !== "") {
      if (Array.isArray(boxScores)) {
        const result = buildGameEventEmbed(
          game,
          boxScores,
          eventDescription,
          eventId,
          `has ended.`
        );

        return result;
      }
    }
  }
  return { occurred: false };
}
